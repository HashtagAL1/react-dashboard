{"version":3,"sources":["logo.svg","components/shared/navigation.js","store/actions/truck-actions.js","services/trucks-service.js","components/shared/sidebar.js","services/modules-service.js","components/shared/containers-map.js","store/actions/module-actions.js","components/modules/modules-map.js","components/modules/modules-list.js","external/Leaflet.MovingMarker-master/MovingMarker.js","components/shared/truck-map.js","components/trucks/truck-tracking.js","components/other/app-router.js","App.js","serviceWorker.js","store/reducers/module-reducer.js","store/reducers/truck-reducer.js","store/reducers/root-reducer.js","index.js"],"names":["module","exports","Navigation","props","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","class","React","Component","fetchTruckPath","dispatch","getState","axios","get","then","res","payload","data","catch","e","updateAnimationState","newState","Sidebar","loadTruckPath","bind","this","loadPath","changeAnimationState","onClick","connect","getModuleIcon","value","ContainersMap","collection","name","checked","LayersControl","BaseLayer","LayerGroup","map","m","i","icon","L","iconUrl","process","volume","Marker","key","_id","position","location","lat","lng","Popup","temperature","description","jsxContent","currentPath","Map","center","zoom","style","height","width","TileLayer","url","attribution","modules","lowest","low","avg","high","all","push","collapsed","generateLayerControl","fetchModules","ModulesMap","mapLatLng","mapZoom","loadModules","console","log","pathname","state","ModulesList","selectedModule","fillRate","filterModules","filterByVolume","filteredModules","criteria","filter","interpolatePosition","p1","p2","duration","t","k","latLng","MovingMarker","extend","statics","notStartedState","endedState","pausedState","runState","options","autostart","loop","initialize","latlngs","durations","prototype","call","_latlngs","index","Array","_durations","_createDurations","_currentDuration","_currentIndex","_state","_startTime","_startTimeStamp","_pauseStartTime","_animId","_animRequested","_currentLine","_stations","isRunning","isEnded","isStarted","isPaused","start","resume","_loadLine","_startAnimation","fire","getLatLng","pause","Date","now","_stopAnimation","_updatePosition","stop","elapsedTime","addLatLng","latlng","moveTo","addStation","pointIndex","length","onAdd","_resumeAnimation","onRemove","lastIndex","distances","totalDistance","distance","distanceTo","ratioDuration","Util","requestAnimFrame","timestamp","_animate","cancelAnimFrame","slice","_updateLine","stationDuration","lineIndex","lineDuration","undefined","setLatLng","noRequestAnim","p","movingMarker","TruckMap","initializeAnimation","generateCoordinates","updateSnakePoyline","resetAnimation","endAnimation","containerMarkers","truckMarker","snakePolyline","stationIndexes","prevMovement","tileLayer","addTo","truckPath","measurements","animationState","result","event","currentLocation","target","current","modulesToRemove","_latlng","item","setTimeout","removeLayer","c","finishAnimation","polyline","color","marker","truckIcon","coordinates","on","truckPosition","trucks","TruckTracking","AppRouter","path","exact","component","App","Boolean","window","hostname","match","initState","moduleReducer","action","truckReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb0fb053.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\nclass Navigation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigationMenu\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navigationMenu\">\r\n\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/modulesMap\">Containers map <span class=\"sr-only\">(current)</span></Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/modulesList\">Containers list</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/truckTracking\">Truck tracking</Link>\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import { getTruckPath } from '../../services/trucks-service';\r\n\r\nexport const fetchTruckPath = () => {\r\n    return (dispatch, getState) => {\r\n        getTruckPath().then((res) => {\r\n            dispatch({ type: 'GET_TRUCK_PATH_SUCCESS', payload: res.data });\r\n        })\r\n        .catch((e) => {\r\n            dispatch({ type: 'GET_TRUCK_PATH_ERROR', payload: e });\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateAnimationState = (newState) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: 'ANIMATION_STATE_CHANGE', payload: newState });\r\n    }\r\n}\r\n\r\nexport const updateTruckPosition = (newPosition) => {\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: 'UPDATE_TRUCK_POSITION', payload: newPosition });\r\n    }\r\n}","import axios from 'axios';\r\n\r\nexport const getTruckPath = () => {\r\n    return axios.get('http://localhost:5555/trucks/getMeasurements');\r\n}","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTruckPath, updateAnimationState } from '../../store/actions/truck-actions';\r\n\r\nclass Sidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.loadTruckPath = this.loadTruckPath.bind(this);\r\n    }\r\n\r\n    loadTruckPath() {\r\n        this.props.loadPath();\r\n        this.props.changeAnimationState('reset');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"pt-1\">\r\n                    <button onClick={() => this.loadTruckPath()} className=\"btn-sm btn btn-secondary\">Load truck path</button>\r\n                </div>\r\n                <div className=\"pt-1\">\r\n                    <div className=\"d-inline-block\">\r\n                        <button onClick={() => this.props.changeAnimationState('play')} className=\"btn-sm btn btn-secondary\"><i class=\"fas fa-play\"></i></button>\r\n                    </div>\r\n                    <div className=\"d-inline-block pl-1\">\r\n                        <button onClick={() => this.props.changeAnimationState('pause')} className=\"btn-sm btn btn-secondary\"><i class=\"fas fa-stop\"></i></button>\r\n                    </div>\r\n                    <div className=\"d-inline-block pl-1\">\r\n                        <button onClick={() => this.props.changeAnimationState('reset')} className=\"btn-sm btn btn-secondary\"><i class=\"fas fa-undo\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadPath: () => dispatch(fetchTruckPath()),\r\n        changeAnimationState: (newState) => dispatch(updateAnimationState(newState))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Sidebar);","import axios from 'axios';\r\n\r\nexport const getModules = () => {\r\n    return axios.get('http://localhost:5555/modules/getAll');\r\n};\r\n\r\nexport const getModuleIcon = (value) => {\r\n    if (value >= 0 && value <= 40) {\r\n        return `/green-bin.png`;\r\n    } else if (value > 40 && value <= 65) {\r\n        return `/yellow-bin.png`;\r\n    } else if (value > 65 && value <= 85) {\r\n        return `/orange-bin.png`;\r\n    } else {\r\n        return `/orange-bin.png`;\r\n    }\r\n}\r\n\r\nexport const getGreenModuleIcon = () => {\r\n    return `/green-bin.png`;\r\n}\r\n\r\nexport const getTruckIcon = () => {\r\n    return `/truck.png`;\r\n}","import React from 'react';\r\nimport { Map, TileLayer, Marker, Popup, LayersControl, LayerGroup } from 'react-leaflet';\r\nimport { getModuleIcon } from '../../services/modules-service';\r\nimport L from 'leaflet';\r\n\r\nclass ContainersMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    generateLayerControl(collection, name, checked) {\r\n        return <LayersControl.BaseLayer name={name} checked={checked}>\r\n                        <LayerGroup>\r\n                            {collection.map((m, i) => {\r\n                                let icon = new L.icon({ iconUrl: process.env.PUBLIC_URL + getModuleIcon(m.volume) });\r\n                                return <Marker key={m._id} position={[m.location.lat, m.location.lng]} icon={icon}>\r\n                                    <Popup>\r\n                                    <div className=\"text-center\">\r\n                                        <div>Id: {m._id}</div>\r\n                                        <div>Type: {m.type}</div>\r\n                                        <div>Temperature: {m.temperature} C</div>\r\n                                        <div>Volume: {m.volume}%</div>\r\n                                        <div>Description: {m.description}</div>\r\n                                        <div>Latitude: {m.location.lat}</div>\r\n                                        <div>Longitude: {m.location.lng}</div>\r\n                                    </div>\r\n                            </Popup>    \r\n                                </Marker>\r\n                            })}\r\n                        </LayerGroup>\r\n                    </LayersControl.BaseLayer>\r\n    }\r\n\r\n    render () {\r\n        let jsxContent = null;\r\n        if (this.props.currentPath === '/modulesList') {\r\n                jsxContent = <Map center={this.props.center} zoom={this.props.zoom} style={{height: \"75%\", width: \"100%\"}}>\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                />\r\n                {this.props.modules.map((m, i) => {\r\n                    let icon = new L.icon({ iconUrl: process.env.PUBLIC_URL + getModuleIcon(m.volume) });\r\n                    return <Marker key={m._id} position={[m.location.lat, m.location.lng]} icon={icon}>\r\n                        <Popup>\r\n                        <div className=\"text-center\">\r\n                            <div>Id: {m._id}</div>\r\n                            <div>Type: {m.type}</div>\r\n                            <div>Temperature: {m.temperature} C</div>\r\n                            <div>Volume: {m.volume}%</div>\r\n                            <div>Description: {m.description}</div>\r\n                            <div>Latitude: {m.location.lat}</div>\r\n                            <div>Longitude: {m.location.lng}</div>\r\n                        </div>\r\n                </Popup>    \r\n                    </Marker>\r\n                })}\r\n            </Map>\r\n        } else {\r\n            let lowest = [];\r\n            let low = [];\r\n            let avg = [];\r\n            let high = [];\r\n            let all = [];\r\n\r\n            for (let m of this.props.modules) {\r\n                if (m.volume >=0 && m.volume <= 40) {\r\n                    lowest.push(m);\r\n                } else if (m.volume > 40 && m.volume <= 65) {\r\n                    low.push(m);\r\n                } else if (m.volume > 65 && m.volume <= 85) {\r\n                    avg.push(m);\r\n                } else {\r\n                    high.push(m);\r\n                }\r\n                all.push(m);\r\n            }\r\n\r\n            jsxContent = <Map center={this.props.center} zoom={this.props.zoom} style={{height: \"100%\", width: \"100%\"}}>\r\n                            <TileLayer\r\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                                attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                            />\r\n\r\n                            <LayersControl position=\"topleft\" collapsed={false}>\r\n                                {this.generateLayerControl(lowest, '0% - 40%', false)}\r\n                                {this.generateLayerControl(low, '40% - 65%', false)}\r\n                                {this.generateLayerControl(avg, '65% - 85%', false)}\r\n                                {this.generateLayerControl(high, '85% - 100%', false)}\r\n                                {this.generateLayerControl(all, 'all', true)}\r\n                            </LayersControl>\r\n                        </Map>\r\n        }\r\n        \r\n        return (\r\n            <div className=\"w-100 h-100\">\r\n                {jsxContent}\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ContainersMap;","import { getModules } from '../../services/modules-service';\r\n\r\nexport const fetchModules = () => {\r\n    return (dispatch, getState) => {\r\n        //ASYNC code here\r\n        getModules().then((res) => {\r\n            dispatch({ type: 'GET_MODULES_SUCCESS', payload: res.data.modules });\r\n        })\r\n        .catch((e) => {\r\n            dispatch({ type: 'GET_MODULES_ERROR', payload: e });\r\n        });        \r\n    }\r\n};\r\n\r\nexport const filterModules = (criteria) => {\r\n    return (dispatch, getState) => {\r\n        let modules = getState().modules.modules;\r\n        if (criteria === 'lowest') {\r\n            modules = modules.filter(m => m.volume >= 0 && m.volume <= 40);\r\n        } else if (criteria === 'low') {\r\n            modules = modules.filter(m => m.volume > 40 && m.volume <= 65);\r\n        } else if (criteria === 'avg') {\r\n            modules = modules.filter(m => m.volume > 65 && m.volume <= 85);\r\n        } else if (criteria === 'high') {\r\n            modules = modules.filter(m => m.volume > 85 && m.volume <= 100);\r\n        }\r\n        dispatch({ type: `FILTER_MODULES`, payload: modules })\r\n    }\r\n}","import React from 'react';\r\nimport Sidebar from '../shared/sidebar';\r\nimport ContainersMap from '../shared/containers-map';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchModules } from '../../store/actions/module-actions';\r\n\r\nclass ModulesMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.map = {\r\n            mapLatLng: [42.688260, 23.325639],\r\n            mapZoom: 14\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadModules();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.props.modules);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-main\">\r\n                <ContainersMap center={this.map.mapLatLng} zoom={this.map.mapZoom} modules={this.props.modules} currentPath={this.props.location.pathname}></ContainersMap>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        modules: state.modules.modules\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadModules: () => dispatch(fetchModules())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModulesMap);","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { fetchModules, filterModules } from '../../store/actions/module-actions';\r\nimport Sidebar from '../shared/sidebar';\r\nimport ContainersMap from '../shared/containers-map'\r\n\r\nclass ModulesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.map = {\r\n            mapLatLng: [42.688260, 23.325639],\r\n            mapZoom: 12\r\n        };\r\n        this.selectedModule = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadModules();\r\n    }\r\n\r\n    filterByVolume(fillRate) {\r\n        this.props.filterModules(fillRate);       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"w-100\">\r\n                <div className=\"half-side float-left\">\r\n                    <div className=\"pr-2 pl-2 pt-2\">\r\n                        <table className=\"table table-bordered table-hover text-center text-xs\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Id</th>\r\n                                    <th>Description</th>\r\n                                    <th>\r\n                                        <div class=\"dropdown d-inline-block pointer-hover\" id=\"fillRateDropdown\" data-toggle=\"dropdown\">Volume <i class=\"fas fa-sort-down dropdown-toggle\"></i></div>\r\n                                        <div class=\"dropdown-menu w-15\">\r\n                                            <div onClick={() => this.filterByVolume('lowest')} class=\"w-100 pointer-hover btn btn-success\">0% - 40%</div>\r\n                                            <div onClick={() => this.filterByVolume('low')} class=\"w-100 pointer-hover btn btn-warning btn-yellow\">40% - 65%</div>\r\n                                            <div onClick={() => this.filterByVolume('avg')} class=\"w-100 pointer-hover btn btn-warning\">65% - 85%</div>\r\n                                            <div onClick={() => this.filterByVolume('high')} class=\"w-100 pointer-hover btn btn-danger\">85% - 100%</div>\r\n                                            <div onClick={() => this.filterByVolume('all')} class=\"w-100 pointer-hover btn btn-secondary\">All</div>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th>Temperature</th>\r\n                                    <th>Location</th>\r\n                                    <th>Type</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.filteredModules.map((m, i) => {\r\n                                    return <tr key={m._id}>\r\n                                        <td>{i + 1}</td>\r\n                                        <td>{m._id}</td>\r\n                                        <td>{m.description}</td>\r\n                                        <td>{m.volume}%</td>\r\n                                        <td>{m.temperature} C</td>\r\n                                        <td>Lat: {m.location.lat}; Lng: {m.location.lng}</td>\r\n                                        <td>{m.type}</td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container-main half-side float-left pr-2 pl-2 pt-2\">\r\n                    <ContainersMap center={this.map.mapLatLng} zoom={this.map.mapZoom} \r\n                        modules={this.props.filteredModules} currentPath={this.props.location.pathname}>\r\n                    </ContainersMap>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        modules: state.modules.modules,\r\n        filteredModules: state.modules.filteredModules\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadModules: () => dispatch(fetchModules()),\r\n        filterModules: (criteria) => dispatch(filterModules(criteria))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModulesList);","import L from 'leaflet';\nL.interpolatePosition = function(p1, p2, duration, t) {\n    var k = t/duration;\n    k = (k > 0) ? k : 0;\n    k = (k > 1) ? 1 : k;\n    return L.latLng(p1.lat + k * (p2.lat - p1.lat),\n        p1.lng + k * (p2.lng - p1.lng));\n};\n\nL.Marker.MovingMarker = L.Marker.extend({\n\n    //state constants\n    statics: {\n        notStartedState: 0,\n        endedState: 1,\n        pausedState: 2,\n        runState: 3\n    },\n\n    options: {\n        autostart: false,\n        loop: false,\n    },\n\n    initialize: function (latlngs, durations, options) {\n        L.Marker.prototype.initialize.call(this, latlngs[0], options);\n\n        this._latlngs = latlngs.map(function(e, index) {\n            return L.latLng(e);\n        });\n\n        if (durations instanceof Array) {\n            this._durations = durations;\n        } else {\n            this._durations = this._createDurations(this._latlngs, durations);\n        }\n\n        this._currentDuration = 0;\n        this._currentIndex = 0;\n\n        this._state = L.Marker.MovingMarker.notStartedState;\n        this._startTime = 0;\n        this._startTimeStamp = 0;  // timestamp given by requestAnimFrame\n        this._pauseStartTime = 0;\n        this._animId = 0;\n        this._animRequested = false;\n        this._currentLine = [];\n        this._stations = {};\n    },\n\n    isRunning: function() {\n        return this._state === L.Marker.MovingMarker.runState;\n    },\n\n    isEnded: function() {\n        return this._state === L.Marker.MovingMarker.endedState;\n    },\n\n    isStarted: function() {\n        return this._state !== L.Marker.MovingMarker.notStartedState;\n    },\n\n    isPaused: function() {\n        return this._state === L.Marker.MovingMarker.pausedState;\n    },\n\n    start: function() {\n        if (this.isRunning()) {\n            return;\n        }\n\n        if (this.isPaused()) {\n            this.resume();\n        } else {\n            this._loadLine(0);\n            this._startAnimation();\n            this.fire('start');\n        }\n    },\n\n    resume: function() {\n        if (! this.isPaused()) {\n            return;\n        }\n        // update the current line\n        this._currentLine[0] = this.getLatLng();\n        this._currentDuration -= (this._pauseStartTime - this._startTime);\n        this._startAnimation();\n    },\n\n    pause: function() {\n        if (! this.isRunning()) {\n            return;\n        }\n\n        this._pauseStartTime = Date.now();\n        this._state = L.Marker.MovingMarker.pausedState;\n        this._stopAnimation();\n        this._updatePosition();\n    },\n\n    stop: function(elapsedTime) {\n        if (this.isEnded()) {\n            return;\n        }\n\n        this._stopAnimation();\n\n        if (typeof(elapsedTime) === 'undefined') {\n            // user call\n            elapsedTime = 0;\n            this._updatePosition();\n        }\n\n        this._state = L.Marker.MovingMarker.endedState;\n        this.fire('end', {elapsedTime: elapsedTime});\n    },\n\n    addLatLng: function(latlng, duration) {\n        this._latlngs.push(L.latLng(latlng));\n        this._durations.push(duration);\n    },\n\n    moveTo: function(latlng, duration) {\n        this._stopAnimation();\n        this._latlngs = [this.getLatLng(), L.latLng(latlng)];\n        this._durations = [duration];\n        this._state = L.Marker.MovingMarker.notStartedState;\n        this.start();\n        this.options.loop = false;\n    },\n\n    addStation: function(pointIndex, duration) {\n        if (pointIndex > this._latlngs.length - 2 || pointIndex < 1) {\n            return;\n        }\n        this._stations[pointIndex] = duration;\n    },\n\n    onAdd: function (map) {\n        L.Marker.prototype.onAdd.call(this, map);\n\n        if (this.options.autostart && (! this.isStarted())) {\n            this.start();\n            return;\n        }\n\n        if (this.isRunning()) {\n            this._resumeAnimation();\n        }\n    },\n\n    onRemove: function(map) {\n        L.Marker.prototype.onRemove.call(this, map);\n        this._stopAnimation();\n    },\n\n    _createDurations: function (latlngs, duration) {\n        var lastIndex = latlngs.length - 1;\n        var distances = [];\n        var totalDistance = 0;\n        var distance = 0;\n\n        // compute array of distances between points\n        for (var i = 0; i < lastIndex; i++) {\n            distance = latlngs[i + 1].distanceTo(latlngs[i]);\n            distances.push(distance);\n            totalDistance += distance;\n        }\n\n        var ratioDuration = duration / totalDistance;\n\n        var durations = [];\n        for (i = 0; i < distances.length; i++) {\n            durations.push(distances[i] * ratioDuration);\n        }\n\n        return durations;\n    },\n\n    _startAnimation: function() {\n        this._state = L.Marker.MovingMarker.runState;\n        this._animId = L.Util.requestAnimFrame(function(timestamp) {\n            this._startTime = Date.now();\n            this._startTimeStamp = timestamp;\n            this._animate(timestamp);\n        }, this, true);\n        this._animRequested = true;\n    },\n\n    _resumeAnimation: function() {\n        if (! this._animRequested) {\n            this._animRequested = true;\n            this._animId = L.Util.requestAnimFrame(function(timestamp) {\n                this._animate(timestamp);\n            }, this, true);\n        }\n    },\n\n    _stopAnimation: function() {\n        if (this._animRequested) {\n            L.Util.cancelAnimFrame(this._animId);\n            this._animRequested = false;\n        }\n    },\n\n    _updatePosition: function() {\n        var elapsedTime = Date.now() - this._startTime;\n        this._animate(this._startTimeStamp + elapsedTime, true);\n    },\n\n    _loadLine: function(index) {\n        this._currentIndex = index;\n        this._currentDuration = this._durations[index];\n        this._currentLine = this._latlngs.slice(index, index + 2);\n    },\n\n    /**\n     * Load the line where the marker is\n     * @param  {Number} timestamp\n     * @return {Number} elapsed time on the current line or null if\n     * we reached the end or marker is at a station\n     */\n    _updateLine: function(timestamp) {\n        // time elapsed since the last latlng\n        var elapsedTime = timestamp - this._startTimeStamp;\n\n        // not enough time to update the line\n        if (elapsedTime <= this._currentDuration) {\n            return elapsedTime;\n        }\n\n        var lineIndex = this._currentIndex;\n        var lineDuration = this._currentDuration;\n        var stationDuration;\n\n        while (elapsedTime > lineDuration) {\n            // substract time of the current line\n            elapsedTime -= lineDuration;\n            stationDuration = this._stations[lineIndex + 1];\n\n            // test if there is a station at the end of the line\n            if (stationDuration !== undefined) {\n                if (elapsedTime < stationDuration) {\n                    this.setLatLng(this._latlngs[lineIndex + 1]);\n                    return null;\n                }\n                elapsedTime -= stationDuration;\n            }\n\n            lineIndex++;\n\n            // test if we have reached the end of the polyline\n            if (lineIndex >= this._latlngs.length - 1) {\n\n                if (this.options.loop) {\n                    lineIndex = 0;\n                    this.fire('loop', {elapsedTime: elapsedTime});\n                } else {\n                    // place the marker at the end, else it would be at\n                    // the last position\n                    this.setLatLng(this._latlngs[this._latlngs.length - 1]);\n                    this.stop(elapsedTime);\n                    return null;\n                }\n            }\n            lineDuration = this._durations[lineIndex];\n        }\n\n        this._loadLine(lineIndex);\n        this._startTimeStamp = timestamp - elapsedTime;\n        this._startTime = Date.now() - elapsedTime;\n        return elapsedTime;\n    },\n\n    _animate: function(timestamp, noRequestAnim) {\n        this._animRequested = false;\n\n        // find the next line and compute the new elapsedTime\n        var elapsedTime = this._updateLine(timestamp);\n\n        if (this.isEnded()) {\n            // no need to animate\n            return;\n        }\n\n        if (elapsedTime != null) {\n             // compute the position\n            var p = L.interpolatePosition(this._currentLine[0],\n                this._currentLine[1],\n                this._currentDuration,\n                elapsedTime);\n            this.setLatLng(p);\n        }\n\n        if (! noRequestAnim) {\n            this._animId = L.Util.requestAnimFrame(this._animate, this, false);\n            this._animRequested = true;\n        }\n    }\n});\n\nL.Marker.movingMarker = function (latlngs, duration, options) {\n    return new L.Marker.MovingMarker(latlngs, duration, options);\n};\n","import React from 'react';\r\nimport L from 'leaflet';\r\nimport { connect } from 'react-redux';\r\nimport { Map, TileLayer, Marker, Popup, LayersControl, LayerGroup } from 'react-leaflet';\r\nimport { updateTruckPosition, updateAnimationState } from '../../store/actions/truck-actions';\r\nimport { getGreenModuleIcon, getTruckIcon, getModuleIcon } from '../../services/modules-service';\r\nimport { fetchTruckPath } from '../../store/actions/truck-actions';\r\nimport * as mm from '../../external/Leaflet.MovingMarker-master/MovingMarker';\r\n\r\nclass TruckMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initializeAnimation = this.initializeAnimation.bind(this);\r\n        this.generateCoordinates = this.generateCoordinates.bind(this);\r\n        this.updateSnakePoyline = this.updateSnakePoyline.bind(this);\r\n        this.resetAnimation = this.resetAnimation.bind(this);\r\n        this.endAnimation = this.endAnimation.bind(this);\r\n        this.map = null;\r\n        this.containerMarkers = null;\r\n        this.durations = 3000;\r\n        this.truckMarker = null;\r\n        this.snakePolyline = null;\r\n        this.stationIndexes = null;\r\n        this.prevMovement = { lat: null, lng: null };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.map = L.map('truck-tracking-map', {\r\n            center: this.props.center,\r\n            zoom: this.props.zoom\r\n        });\r\n        \r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(this.map);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.truckPath && !this.truckMarker) {\r\n            this.initializeAnimation(this.props.truckPath.measurements);\r\n        }\r\n        \r\n        if (this.props.animationState === 'play') {\r\n            if (this.truckMarker && !this.truckMarker.isRunning()) {\r\n                if (this.truckMarker.isEnded()) {\r\n                    this.resetAnimation();\r\n                    this.initializeAnimation(this.props.truckPath.measurements);\r\n                }\r\n                this.truckMarker.start();\r\n            } else if (this.truckMarker && this.truckMarker.isPaused()) {\r\n                this.truckMarker.resume();\r\n            }\r\n        } else if (this.props.animationState === 'pause') {\r\n            if (this.truckMarker && this.truckMarker.isRunning()) {\r\n                this.truckMarker.pause();\r\n            }\r\n        } else if (this.props.animationState === 'reset') {\r\n            this.resetAnimation();\r\n            this.initializeAnimation(this.props.truckPath.measurements);\r\n        }\r\n    }\r\n\r\n    generateCoordinates (measurements) {\r\n        let result = [];\r\n        for (let m of measurements) {\r\n            result.push([m.location.lat, m.location.lng]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    updateSnakePoyline (event) {\r\n        let currentLocation = event.target.getLatLng();\r\n        this.snakePolyline.addLatLng(currentLocation);\r\n        let current = this.truckMarker.getLatLng();\r\n        let map = this.map;\r\n\r\n        if (current.lat === this.prevMovement.lat && current.lng === this.prevMovement.lng) {\r\n            let modulesToRemove = this.containerMarkers.filter(m => m._latlng.lat === current.lat && m._latlng.lng === current.lng);\r\n            if (modulesToRemove.length > 0) {\r\n                for (let item of modulesToRemove) {\r\n                    setTimeout(function () {\r\n                        map.removeLayer(item);\r\n                    }, 1000);\r\n                }\r\n            }\r\n\r\n            this.containerMarkers = this.containerMarkers.filter(m => m._latlng.lat !== current.lat && m._latlng.lng !== current.lng);\r\n        }\r\n\r\n        this.prevMovement = {\r\n            lat: current.lat,\r\n            lng: current.lng\r\n        }\r\n    }\r\n\r\n    resetAnimation() {\r\n        this.map.removeLayer(this.snakePolyline);\r\n        this.map.removeLayer(this.truckMarker);\r\n        for (let c of this.containerMarkers) {\r\n            this.map.removeLayer(c)\r\n        }\r\n        this.containerMarkers = [];\r\n    }\r\n\r\n    endAnimation() {\r\n        this.props.finishAnimation();\r\n        //this.truckMarker.stop();\r\n    }\r\n\r\n    initializeAnimation(measurements) {\r\n        this.stationIndexes = [];\r\n        this.snakePolyline = L.polyline([], { color: '#51BBE1' });\r\n        this.snakePolyline.addTo(this.map)\r\n        this.containerMarkers = [];\r\n\r\n        for (let i = 0; i < measurements.length; i++) {\r\n            let m = measurements[i];\r\n            if (m.type !== 'collect') {\r\n                continue;\r\n            }\r\n            let icon = L.icon({ iconUrl: getModuleIcon(m.value) });\r\n            let marker = L.marker([m.location.lat, m.location.lng], { icon: icon });\r\n            this.stationIndexes.push(i);\r\n            this.containerMarkers.push(marker);\r\n            marker.addTo(this.map);\r\n        }\r\n        let truckIcon = L.icon({ iconUrl: getTruckIcon() });\r\n        let coordinates = this.generateCoordinates(measurements);\r\n\r\n\r\n        this.truckMarker = L.Marker.movingMarker(coordinates, this.durations, { autostart: false, icon: truckIcon });\r\n        for (let i of this.stationIndexes) {\r\n            this.truckMarker.addStation(i, 1000);\r\n        }\r\n        this.truckMarker.on('move', this.updateSnakePoyline);\r\n        this.truckMarker.on('end', this.endAnimation)\r\n        this.truckMarker.addTo(this.map);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id=\"truck-tracking-map\" className='w-100 h-100'></div>\r\n        )\r\n    }    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        truckPosition: state.trucks.truckPosition,\r\n        animationState: state.trucks.animationState\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        finishAnimation: () => dispatch(updateAnimationState('stop'))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TruckMap);","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport Sidebar from '../shared/sidebar';\r\nimport TruckMap from '../shared/truck-map';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTruckPath } from '../../store/actions/truck-actions';\r\n\r\nclass TruckTracking extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.map = {\r\n            mapLatLng: [42.688260, 23.325639],\r\n            mapZoom: 12\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadTruckPath();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //console.log(this.props.truckPath);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-main\">\r\n                <div className=\"sidebar-container\">\r\n                    <Sidebar></Sidebar>\r\n                </div>\r\n                <div className=\"map-container\">\r\n                    <TruckMap center={this.map.mapLatLng} zoom={this.map.mapZoom} truckPath={this.props.truckPath}></TruckMap>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        truckPath: state.trucks.truckPath\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loadTruckPath: () => dispatch(fetchTruckPath())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TruckTracking);","import React from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport ModulesMap from '../modules/modules-map';\r\nimport ModulesList from '../modules/modules-list';\r\nimport TruckTracking from '../trucks/truck-tracking';\r\n\r\nclass AppRouter extends React.Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/\" exact component={ModulesMap}/>\r\n                <Route path=\"/modulesMap\" exact component={ModulesMap}/>\r\n                <Route path=\"/modulesList\" exact component={ModulesList}/>    \r\n                <Route path=\"/truckTracking\" exact component={TruckTracking}/>                \r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppRouter;","import React from 'react';\nimport Navigation from './components/shared/navigation'\nimport logo from './logo.svg';\nimport './App.css';\nimport AppRouter from './components/other/app-router';\n\nfunction App() {\n  return (\n    <div>\n      <Navigation />\n\n      <div>\n        <AppRouter />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    modules: [],\r\n    filteredModules: []\r\n};\r\nconst moduleReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_MODULES_SUCCESS':\r\n            return {\r\n                ...state,\r\n                modules: action.payload,\r\n                filteredModules: action.payload\r\n            }\r\n        case 'GET_MODULES_ERROR':\r\n            return {\r\n                ...state\r\n            }\r\n            case 'FILTER_MODULES':\r\n            return {\r\n                ...state,\r\n                filteredModules: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default moduleReducer;","const initState = {\r\n    trucks: [],\r\n    truckPosition: null,\r\n    animationState: 'reset'\r\n};\r\n\r\nconst truckReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TRUCK_PATH_SUCCESS':\r\n            return {\r\n                ...state,\r\n                truckPath: action.payload,\r\n                truckPosition: action.payload.measurements[0].location\r\n            };\r\n        case 'UPDATE_TRUCK_POSITION':\r\n            return {\r\n                ...state,\r\n                truckPosition: action.payload\r\n            };\r\n        case 'ANIMATION_STATE_CHANGE':\r\n            return {\r\n                ...state,\r\n                animationState: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n    //return state;\r\n};\r\n\r\nexport default truckReducer;","import { combineReducers } from 'redux';\r\nimport moduleReducer from './module-reducer';\r\nimport truckReducer from './truck-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    modules: moduleReducer,\r\n    trucks: truckReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/root-reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}